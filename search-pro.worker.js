const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":62,\"nextId\":62,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1@0\",\"3\":\"2\",\"4\":\"2@0\",\"5\":\"2@1\",\"6\":\"3\",\"7\":\"3@0\",\"8\":\"3@1\",\"9\":\"4\",\"10\":\"4#markdown-介绍\",\"11\":\"4#markdown-配置\",\"12\":\"4#markdown-扩展\",\"13\":\"4#vuepress-扩展\",\"14\":\"4#主题扩展\",\"15\":\"4#提示容器\",\"16\":\"4#代码块\",\"17\":\"4#上下角标\",\"18\":\"4#自定义对齐\",\"19\":\"4#attrs\",\"20\":\"4#脚注\",\"21\":\"4#标记\",\"22\":\"4#任务列表\",\"23\":\"4#图片增强\",\"24\":\"4#组件\",\"25\":\"5\",\"26\":\"5#页面标题\",\"27\":\"5#页面信息\",\"28\":\"5#页面内容\",\"29\":\"5#组件\",\"30\":\"5@0\",\"31\":\"5@1\",\"32\":\"6\",\"33\":\"6#基础数学1\",\"34\":\"7\",\"35\":\"7#介绍\",\"36\":\"7#详情\",\"37\":\"8\",\"38\":\"8#唯一分解定理\",\"39\":\"8#一、质因数分解\",\"40\":\"8#二、求-的约数的个数-约数个数定理\",\"41\":\"8#三、求-的所有约数的和-约数和定理\",\"42\":\"8#核心代码实现在题目中给出。\",\"43\":\"9\",\"44\":\"9#质数的判定\",\"45\":\"9#一、枚举法\",\"46\":\"9#二、因数分解法\",\"47\":\"10\",\"48\":\"10#介绍\",\"49\":\"10#详情\",\"50\":\"11\",\"51\":\"11#进制转换\",\"52\":\"11#示例\",\"53\":\"11#案例1-十进制数转二进制数\",\"54\":\"11#案例2-二进制数转十进制数\",\"55\":\"11#案例3-十进制数转-进制数\",\"56\":\"11#案例4-进制数转十进制数\",\"57\":\"11#案例5-进制数-转为-进制数\",\"58\":\"12\",\"59\":\"12#一、模运算-除法运算\",\"60\":\"12#二、-整数转换字符串\",\"61\":\"13\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,12],\"1\":[1],\"2\":[null,null,1],\"3\":[1,18],\"4\":[null,null,1],\"5\":[null,null,1],\"6\":[1,20],\"7\":[null,null,1],\"8\":[null,null,1],\"9\":[2,11],\"10\":[2,8],\"11\":[2,13],\"12\":[2,11],\"13\":[2,10],\"14\":[1,10],\"15\":[1,19],\"16\":[1,1],\"17\":[1,3],\"18\":[1,3],\"19\":[1,5],\"20\":[1,2],\"21\":[1,3],\"22\":[1,6],\"23\":[1,2],\"24\":[1],\"25\":[1,3],\"26\":[1,19],\"27\":[1,20],\"28\":[1,12],\"29\":[1,13],\"30\":[null,null,1],\"31\":[null,null,2],\"32\":[1],\"33\":[1],\"34\":[1],\"35\":[1,4],\"36\":[1,1],\"37\":[1],\"38\":[1,46],\"39\":[2,79],\"40\":[4,83],\"41\":[4,44],\"42\":[2],\"43\":[1,32],\"44\":[1,5],\"45\":[2,51],\"46\":[2,91],\"47\":[1],\"48\":[1,4],\"49\":[1,1],\"50\":[1,31],\"51\":[1,14],\"52\":[1],\"53\":[2,34],\"54\":[2,35],\"55\":[3,26],\"56\":[2,23],\"57\":[3,29],\"58\":[1,22],\"59\":[2,44],\"60\":[2,24],\"61\":[1,3]},\"averageFieldLength\":[1.3924731182795698,18.57932039229225,0.7071759259259258],\"storedFields\":{\"0\":{\"h\":\"蓝桥wiki\",\"t\":[\"这是项目主页的案例。你可以在这里放置你的主体内容。\",\"想要使用此布局，你需要在页面 front matter 中设置 home: true。\",\"配置项的相关说明详见 项目主页配置。\"]},\"1\":{\"h\":\"动态规划\"},\"2\":{\"c\":[\"使用指南\"]},\"3\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"4\":{\"c\":[\"使用指南\"]},\"5\":{\"c\":[\"禁用\"]},\"6\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"7\":{\"c\":[\"指南\"]},\"8\":{\"c\":[\"布局\"]},\"9\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"10\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"11\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"相关信息\",\"Frontmatter 是 VuePress 中很重要的一个概念，如果你不了解它，你需要阅读 Frontmatter 介绍。\"]},\"12\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"13\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"14\":{\"h\":\"主题扩展\",\"t\":[\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"15\":{\"h\":\"提示容器\",\"t\":[\"安全的在 Markdown 中使用 {{ variable }}。\",\"自定义标题\",\"信息容器，包含 代码 与 链接。\",\"const a = 1; \",\"自定义标题\",\"提示容器\",\"自定义标题\",\"警告容器\",\"自定义标题\",\"危险容器\",\"自定义标题\",\"详情容器\",\"查看详情\"]},\"16\":{\"h\":\"代码块\",\"t\":[\"查看详情\"]},\"17\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"18\":{\"h\":\"自定义对齐\",\"t\":[\"我是居中的\",\"我在右对齐\",\"查看详情\"]},\"19\":{\"h\":\"Attrs\",\"t\":[\"一个拥有 ID 的 单词。\",\"查看详情\"]},\"20\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注^first.\",\"查看详情\"]},\"21\":{\"h\":\"标记\",\"t\":[\"你可以标记 重要的内容 。\",\"查看详情\"]},\"22\":{\"h\":\"任务列表\",\"t\":[\"[x] 计划 1\",\"[ ] 计划 2\",\"查看详情\"]},\"23\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小\",\"查看详情\"]},\"24\":{\"h\":\"组件\"},\"25\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"26\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 --- \"]},\"27\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"28\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"29\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"30\":{\"c\":[\"使用指南\"]},\"31\":{\"c\":[\"页面配置\",\"使用指南\"]},\"32\":{\"h\":\"简介\"},\"33\":{\"h\":\"基础数学1\"},\"34\":{\"h\":\"基础数学2\"},\"35\":{\"h\":\"介绍\",\"t\":[\"我们支持 foo 功能，...\"]},\"36\":{\"h\":\"详情\",\"t\":[\"...\"]},\"37\":{\"h\":\"唯一分解定理\"},\"38\":{\"h\":\"唯一分解定理\",\"t\":[\"简介\",\"对于一个大于 1 的整数 n，它要么本身是个质数，要么可以被唯一地分解成若干质因子的乘积的形式（质因子是以指数形式出现，且按照质因子从小到大的顺序排列）。\",\"我们可以用数学公式将定理表示出来，即：\",\"n=i=1∏k​piai​​=p1a1​​×p2a2​​×⋯×pkak​​\",\"其中 p1​,p2​,…,pk​ 为互不相同的质数，a1​,a2​,…,ak​ 为正整数。\",\"例如 18 就可以表示为 2132，它的质因子有 2、3，质因子 2 的个数为 1（指数为 1），质因子 3 的个数为 2（质数为 2）：\",\"p1​=2,a1​=1p2​=3,a2​=2\",\"对于一个整数 n，它只有一种质因数分解的方式，不能有其他的分解方式。\",\"例如 18 它只有 2132 这一种质因数分解的方式，而不能有其他的分解方式，如：\",\"18=223118=2133⋯\",\"唯一分解定理的应用非常广泛，下面我们来看看常见的三种应用。\"]},\"39\":{\"h\":\"一、质因数分解\",\"t\":[\"唯一分解定理 + 试除法。\",\"质因数分解是将一个正整数分解成若干个质因子的乘积，它和因数分解类似，通过枚举 [2,n​] 之间的数，找出我们想要的答案。\",\"在因数分解中，当我们找到 n 的一个因子后，我们只是简单的将其存储，然后继续找下一个因子。而在质因数分解中，当我们找到 n 的一个因子后，我们需要令 n 不断除以该因子，直到 n 不在包含该因子。\",\"下面以 12 为例进行因数分解和质因数分解的演示。\",\"在质因数分解的过程中，能被 n 整除的 i，一定都是质数。\",\"证明\",\"假如 i 是一个合数，那么它一定可以分解成多个质因子相乘的形式，这多个质因子同时也是 n 的质因子且比 i 要小。但根据我们的步骤，比 i 小的数在此之前的循环过程中已经被除尽了，所以 i 不可能是合数，只可能是质数。\",\"此外，在枚举结束后，我们还需要对剩余的 n （除尽质因子后的 n）作判断。如果剩余的 n 大于 1，则剩余的 n也是原来的 n 的一个质因子，且指数为 1。\",\"说明\",\"原来的 n 中最多可能包含一个大于 n​ 的质因子，且该质因子的指数最多为 1：\",\"如果不止包含一个，则它们相乘的结果为大于 n；\",\"如果指数大于 1，同理。\",\"在我们枚举 2∼n​ 的过程中，该质因子不会被除尽，就会被遗留下来。所以如果剩余的数大于 1，那么它就是那个大于 n​ 的质因子了。\",\"运行举例说明：\",\"work(7) 返回的结果为：\",\"7 1 \",\"work(12) 返回的结果为：\",\"2 2 3 1 \",\"work(30) 返回的结果为：\",\"2 1 3 1 5 1 \"]},\"40\":{\"h\":\"二、求 的约数的个数（ ）\",\"t\":[\"简介\",\"约数（因数）个数定理是一个关于正整数的数学定理，它声称：对于任意正整数 n，它的约数个数等于它分解质因数后每个质因子的指数加 1 之积。\",\"举个例子，如果我们要计算 12 的约数个数，我们可以将 12 分解质因数：\",\"12=2231\",\"然后，对于每个质因子，我们将它的指数加 1 并相乘，得到：\",\"(2+1)×(1+1)=6\",\"因此，12 的约数个数为 36。\",\"具体地，如果 n 的质因数分解式为：\",\"n=p1a1​​×p2a2​​×⋯×pkak​​\",\"那么 n 的约数个数就为：\",\"i=1∏k​(ai​+1)=(a1​+1)(a2​+1)⋯(ak​+1)\",\"至于原因，我们可以简单地用乘法原理来解释。\",\"乘法原理\",\"做一件事，完成它需要分成 n 个步骤，做第一步有 m1​ 种不同的方法，做第二步有 m2​ 种不同的方法，⋯，做第 n 步有 mn​ 种不同的方法，那么完成这件事共有 m1​×m2​×⋯×mn​ 种不同的方法。\",\"n 可以分解质因数为 p1a1​​×p2a2​​×⋯×pkak​​，其中：\",\"p1a1​​ 的约数有 p10​,p11​,⋯,p1a1​​，共 (a1​+1) 个；\",\"p2a2​​ 的约数有 p20​,p21​,⋯,p2a2​​，共 (a2​+1) 个；\",\"⋯\",\"pkak​​ 的约数有 pk0​,pk1​,⋯,pkak​​，共 (ak​+1) 个。\",\"根据乘法原理可得 n 的约数个数为 ∏i=1k​(ai​+1)=(a1​+1)(a2​+1)⋯(ak​+1)。\",\"运行举例说明：\",\"work(4) 返回的结果为：\",\"3 \",\"work(10) 返回的结果为：\",\"4 \",\"work(12) 返回的结果为：\",\"6 \"]},\"41\":{\"h\":\"三、求 的所有约数的和（ ）\",\"t\":[\"简介\",\"约数（因数）和定理是一个关于正整数的数学定理，它声称：对于任意正整数 n，它的约数之和等于它分解质因数后每个质因子的所有次幂之和的乘积。\",\"举个例子，如果我们要计算 12 的约数之和，我们可以将 12 分解质因数：\",\"12=2231\",\"然后，对于每个质因子，我们将它的约数相加并相乘，得到：\",\"(20+21+22)×(30+31)=7×4=28\",\"因此，12 的约数之和为 28。\",\"具体地，如果 n 的质因数分解式为：\",\"n=p1a1​​×p2a2​​×⋯×pkak​​\",\"那么 n 的约数之和就为：\",\"(p10​+p11​+⋯+p1a1​​)(p20​+p21​+...+p2a2​)⋯(pk0​+pk1​+⋯+pkak​​)\",\"至于原因，我们同样可以用乘法原理证明。\",\"仔细观察不难发现：\",\"p10​+p11​+⋯+p1a1​​\",\"p20​+p21​+...+p2a2​\",\"⋯\",\"pk0​+pk1​+⋯+pkak​​\",\"均是等比数列。因此，我们可以套用等比数列求和公式，进一步得到：\",\"i=1∏k​pi​−1piai​+1​−1​=p1​−1p1a1​+1​−1​×p2​−1p2a2​+1​−1​×⋯×pk​−1pkak​+1​−1​\"]},\"42\":{\"h\":\"核心代码实现在题目中给出。\"},\"43\":{\"h\":\"质数\",\"t\":[\"简介\",\"质数，又称素数，是一种特殊的自然数，它只能被 1 和本身整除。\",\"质数的定义可以被表述为：除了 1 和本身以外，没有其他的因数。\",\"举个例子，2 是一个质数，因为它只能被 1 和 2 (本身)整除；4 不是一个质数，因为它能被 2 整除。\",\"在日常生活中，我们常见的质数有 3,5,7,11,13 等等。由于质数是自然数中唯一无法被其他数整除的数，因此质数的性质在很多数学理论中都有着重要的作用。\"]},\"44\":{\"h\":\"质数的判定\",\"t\":[\"判定一个数是否是质数的方法很多，以下将介绍两种较为简单的方法：\",\"枚举法。\",\"因数分解法。\"]},\"45\":{\"h\":\"一、枚举法\",\"t\":[\"我们知道，对于一个正整数 n，它的因数必然是小于等于它本身的。于是，我们可以从 2 开始逐个枚举小于 n 的所有数，判断其中是否存在 n 的因数。如果找到一个 n 的因数，则该数不是质数；如果枚举完后都没有找到因数，则 n 是质数。\",\"运行举例说明：\",\"is_prime(7) 返回的结果为 true，说明 7 是一个质数；\",\"is_Prime(10) 返回的结果为 false，说明 10 不是一个质数；\",\"is_Prime(13) 返回的结果为 true，说明 13 是一个质数。\",\"在判断 n 是否是质数的同时，用 vector 存储下 n 的因数（不包含 1 和 n）\",\"运行举例说明：\",\"work(7) 返回的结果为：\",\"7 是质数 \",\"work(10) 返回的结果为：\",\"10 不是质数 10 的因子有: 2 5 \",\"枚举法的编码量小，思路简单，不易出错，但时间复杂度为 O(n)，算法效率低。因此，在绝对多数情况下，我们不会使用该方法来判断一个数是否为质数。\"]},\"46\":{\"h\":\"二、因数分解法\",\"t\":[\"因数分解法的本质也是通过枚举，找寻 n 的因数，只不过它的枚举范围不再是 [2,n)，而是 [2,(​n)]，即从 2 开始逐个枚举 n​ 之间的所有数，判断其中是否存在 n 的因数。\",\"为什么枚举范围能够缩小至 [2,√n] 呢？\",\"首先我们要知道，因数都是成对存在的。比如 10，你找到了一个因数 2，则一定有个因数 5，因为 210​=5。\",\"对于一个合数 n，我们设它的一对因数为 a,b(n=a×b)。那么，在 a,b 中，必然有一个值小于等于n​，一个值大于等于n​。\",\"这是因为：\",\"如果 a,b 都小于 n​，则 a×b<n​×n​=n；\",\"如果 a,b 都大于 n​，则 a×b>n​×n​=n。\",\"根据以上讨论的两点：\",\"因数都是成对存在的；\",\"在一对因数中，必然有一个值小于等于 n​，一个只大于等于 n​。\",\"因此，如果在 n​ 之前都找不到 n 的因数的话，n​ 之后也就不会有因数了（即 n 是一个质数）。\",\"运行举例说明：\",\"is_prime(7) 返回的结果为 true，说明 7 是一个质数；\",\"is_Prime(10) 返回的结果为 false，说明 10 不是一个质数；\",\"is_Prime(13) 返回的结果为 true，说明 13 是一个质数。\",\"我们也可以在判断 n 是否是质数的同时，用 vector 存储下 n 的因数（不包含 1 和 n）。\",\"运行举例说明：\",\"work(7) 返回的结果为：\",\"7 是质数 \",\"work(12) 返回的结果为：\",\"12 不是质数 12 的因子有: 2 6 3 4 \",\"因数分解法的时间复杂度相对较低，为 O(n​)，在绝大多数情况下都能满足要求。若需要处理更大的数据，我们可以使用更高效的算法，如欧拉筛法、 Miller-Rabin 算法等。\"]},\"47\":{\"h\":\"基础数学1\"},\"48\":{\"h\":\"介绍\",\"t\":[\"我们支持 foo 功能，...\"]},\"49\":{\"h\":\"详情\",\"t\":[\"...\"]},\"50\":{\"h\":\"进制转换\",\"t\":[\"简介\",\"在生活中，我们常说的整数均是十进制数。\",\"十进制数是组成以 10 为基础的数字系统，由 0，1，2，3，4，5，6，7，8，9 十个基本数字组成。\",\"在计算机中，被广泛采用的是二进制数。\",\"与十进制数类似，二进制是组成以 2 为基础的数字系统，由 0，1 两个基本数字组成。\",\"同理，x 进制是组成以 x 为基础的数字系统，由 0,1,⋯,x−1 共 x 个基本数字组成。\"]},\"51\":{\"h\":\"进制转换\",\"t\":[\"对于一个十进制数 13，我们可以用 (13)10​ 表示 ；\",\"对于一个二进制数 1101，我们可以用 (1101)2​ 表示；\",\"对于一个 x 进制数 abcde，我们可以用 (abcde)x​ 表示。\"]},\"52\":{\"h\":\"示例\"},\"53\":{\"h\":\"案例1：十进制数转二进制数\",\"t\":[\"将十进制数转换为二进制数的方法如下：\",\"除 2 取余，将余数相接得到一个二进制数。\",\"将十进制数除以 2 ，得到一个新的十进制数，重复步骤 1，直到旧的十进制数为 0 为止。\",\"例如，将十进制数 13 转换为二进制数：\",\"13÷2=6...16÷2=3...03÷2=1...11÷2=0...1\",\"将余数从下至上拼接得到的二进制数为 1101，即十进制数 (13)10​ 对应的二进制数为 (1101)2​。\",\"运行举例说明：\",\"向 work() 函数传入参数 13，程序会输出：1101；\",\"向 work() 函数传入参数 123，程序会输出：1111011。\"]},\"54\":{\"h\":\"案例2：二进制数转十进制数\",\"t\":[\"将二进制数转换为十进制数的方法如下：\",\"从二进制数的最低位开始，依次将每一位的数字乘以 2 的对应次幂，并将结果相加得到十进制数。\",\"例如，将二进制数 1101 转换为十进制数：\",\"1×20=10×21=01×22=41×23=8\",\"将每一位的乘积相加得到十进制数 13，即二进制数 (1101)2​ 对应的十进制数为 (13)10​。\",\"运行举例说明：\",\"向 work() 函数传入参数 vector<int>b = {1 , 1 , 0 , 1}，程序会输出：13；\",\"向 work() 函数传入参数 vector<int>b = {1 , 1 , 1 , 1}，程序会输出：15。\",\"提示\",\"(13)10​=3×100+1×101=(13)10​\",\"(1101)2​=1×20+0×21+1×22+1×23=(13)10​\",\"(abcde)x​ 对应的十进制数 = e×x0+d×x1+c×x2+b×x3+a×x4。\"]},\"55\":{\"h\":\"案例3：十进制数转 进制数\",\"t\":[\"与十进制转二进制的方法几乎完全相同：\",\"除 x 取余，将余数从下至上拼接得到一个 x 进制数。\",\"将十进制数除以 x ，得到一个新的十进制数，重复步骤 1，直到旧的十进制数为 0 为止。\",\"运行举例说明：\",\"向 work() 函数传入参数 13 , 2（即 work(13 , 2)），程序会输出：1101；\",\"向 work() 函数传入参数 20 , 8（即 work(20 , 8)），程序会输出：24。\"]},\"56\":{\"h\":\"案例4： 进制数转十进制数\",\"t\":[\"与二进制转十进制方法几乎完全相同。\",\"对于一个 x 进制数 (abcde)x​，其对应的十进制数为：\",\"e×x0+d×x1+c×x2+b×x3+a×x4\",\"运行举例说明：\",\"vector<int>A = {1 , 1 , 0 , 1}; int x = 2; work(A , x); \",\"输出结果为 13。\",\"vector<int>A = {2 , 4}; int x = 8; work(A , x); \",\"输出结果为 20。\"]},\"57\":{\"h\":\"案例5： 进制数 转为 进制数\",\"t\":[\"先将 x 进制数 Ax​ 转为十进制数 B10​；\",\"再将十进制数 B10​ 转为 y 进制数。\",\"运行举例说明：\",\"vector<int>A = {1 , 1 , 0 , 1}; int x = 2 , y = 8; work(A , x , y); \",\"输出结果为 24。\",\"vector<int>A = {1 , 4}; int x = 16 , y = 8; work(A , x , y); \",\"输出结果为 24。\\n说明：(14)16​=(20)10​=(24)8​\"]},\"58\":{\"h\":\"数位拆分\",\"t\":[\"简介\",\"「数位拆分」即把一个数的每一位数字拆分出来，以方便我们后续操作。例如整数 4321，它的千位数字为 4，百位数字为 3，十位数字为 2，个位数字为 1。\",\"那么，如何通过编码取得一个整数的每一位数字呢？常见的办法有两种：\",\"模运算 + 除法运算。\",\"整数转换字符串。\"]},\"59\":{\"h\":\"一、模运算+除法运算\",\"t\":[\"以 4321 为例：\",\"4321%10=1，得到个位上的数字 1；4321÷10=432（只保留整数部分）。\",\"432%10=2，得到十位上的数字 2；432÷10=43。\",\"43%10=3，得到百位上的数字 3；43÷10=4。\",\"4%10=4，得到千位上的数字 4；4÷10=0（结束操作）。\",\"如上所示，通过不断的模 10 、 除 10，我们就可以依次得到一个整数的个位，十位，百位，千位，…\",\"运行举例说明：\",\"向 work() 函数传入参数 54321，程序会输出：\",\"1 2 3 4 5 \",\"向 work() 函数输入参数 8935216，程序会输出：\",\"6 1 2 5 3 9 8 \"]},\"60\":{\"h\":\"二、 整数转换字符串\",\"t\":[\"字符串在存储上类似字符数组，所以它每一位的单个元素都是可以提取的。对此，我们可以使用语言自带的整数转字符串函数，将整数转换为字符串。转换为字符串后，字符串的每一位即对应整数的每一位数字。\",\"运行举例说明：\",\"向 work() 函数传入参数 54321，程序会输出：\",\"5 4 3 2 1 \",\"向 work() 函数输入参数 8935216，程序会输出：\",\"8 9 3 5 2 1 6 \"]},\"61\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"字符串的每一位即对应整数的每一位数字\",{\"1\":{\"60\":1}}],[\"字符串在存储上类似字符数组\",{\"1\":{\"60\":1}}],[\"函数输入参数\",{\"1\":{\"59\":1,\"60\":1}}],[\"函数传入参数\",{\"1\":{\"53\":2,\"54\":2,\"55\":2,\"59\":1,\"60\":1}}],[\"千位\",{\"1\":{\"59\":1}}],[\"百位\",{\"1\":{\"59\":1}}],[\"百位数字为\",{\"1\":{\"58\":1}}],[\"结束操作\",{\"1\":{\"59\":1}}],[\"整数转换字符串\",{\"0\":{\"60\":1},\"1\":{\"58\":1}}],[\"整除\",{\"1\":{\"43\":2}}],[\"整除的\",{\"1\":{\"39\":1}}],[\"模运算+除法运算\",{\"0\":{\"59\":1}}],[\"模运算\",{\"1\":{\"58\":1}}],[\"常见的办法有两种\",{\"1\":{\"58\":1}}],[\"数位拆分\",{\"0\":{\"58\":1},\"1\":{\"58\":1}}],[\"y\",{\"1\":{\"57\":5}}],[\"再将十进制数\",{\"1\":{\"57\":1}}],[\"先将\",{\"1\":{\"57\":1}}],[\"转为十进制数\",{\"1\":{\"57\":1}}],[\"转为\",{\"0\":{\"57\":1},\"1\":{\"57\":1}}],[\"转换为字符串后\",{\"1\":{\"60\":1}}],[\"转换为十进制数\",{\"1\":{\"54\":1}}],[\"转换为二进制数\",{\"1\":{\"53\":1}}],[\"输出结果为\",{\"1\":{\"56\":2,\"57\":2}}],[\"其对应的十进制数为\",{\"1\":{\"56\":1}}],[\"其中\",{\"1\":{\"38\":1,\"40\":1}}],[\"e×x0+d×x1+c×x2+b×x3+a×x4\",{\"1\":{\"54\":1,\"56\":1}}],[\"enhance\",{\"1\":{\"14\":1}}],[\"并将结果相加得到十进制数\",{\"1\":{\"54\":1}}],[\"并相乘\",{\"1\":{\"40\":1}}],[\"依次将每一位的数字乘以\",{\"1\":{\"54\":1}}],[\"从二进制数的最低位开始\",{\"1\":{\"54\":1}}],[\"案例5\",{\"0\":{\"57\":1}}],[\"案例4\",{\"0\":{\"56\":1}}],[\"案例3\",{\"0\":{\"55\":1}}],[\"案例2\",{\"0\":{\"54\":1}}],[\"案例1\",{\"0\":{\"53\":1}}],[\"程序会输出\",{\"1\":{\"53\":2,\"54\":2,\"55\":2,\"59\":2,\"60\":2}}],[\"向\",{\"1\":{\"53\":2,\"54\":2,\"55\":2,\"59\":2,\"60\":2}}],[\"重复步骤\",{\"1\":{\"53\":1,\"55\":1}}],[\"重要的内容\",{\"1\":{\"21\":1}}],[\"将整数转换为字符串\",{\"1\":{\"60\":1}}],[\"将每一位的乘积相加得到十进制数\",{\"1\":{\"54\":1}}],[\"将二进制数\",{\"1\":{\"54\":1}}],[\"将二进制数转换为十进制数的方法如下\",{\"1\":{\"54\":1}}],[\"将余数从下至上拼接得到一个\",{\"1\":{\"55\":1}}],[\"将余数从下至上拼接得到的二进制数为\",{\"1\":{\"53\":1}}],[\"将余数相接得到一个二进制数\",{\"1\":{\"53\":1}}],[\"将十进制数\",{\"1\":{\"53\":1}}],[\"将十进制数除以\",{\"1\":{\"53\":1,\"55\":1}}],[\"将十进制数转换为二进制数的方法如下\",{\"1\":{\"53\":1}}],[\"取余\",{\"1\":{\"53\":1,\"55\":1}}],[\"示例\",{\"0\":{\"52\":1}}],[\"表示\",{\"1\":{\"51\":3}}],[\"两个基本数字组成\",{\"1\":{\"50\":1}}],[\"被广泛采用的是二进制数\",{\"1\":{\"50\":1}}],[\"十位\",{\"1\":{\"59\":1}}],[\"十位数字为\",{\"1\":{\"58\":1}}],[\"十进制数转\",{\"0\":{\"55\":1}}],[\"十进制数转二进制数\",{\"0\":{\"53\":1}}],[\"十进制数是组成以\",{\"1\":{\"50\":1}}],[\"十个基本数字组成\",{\"1\":{\"50\":1}}],[\"9\",{\"1\":{\"50\":1,\"59\":1,\"60\":1}}],[\"8935216\",{\"1\":{\"59\":1,\"60\":1}}],[\"8​\",{\"1\":{\"57\":1}}],[\"8\",{\"1\":{\"50\":1,\"55\":2,\"56\":1,\"57\":2,\"59\":1,\"60\":1}}],[\"03÷2=1\",{\"1\":{\"53\":1}}],[\"0\",{\"1\":{\"50\":3,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1}}],[\"由\",{\"1\":{\"50\":3}}],[\"由于质数是自然数中唯一无法被其他数整除的数\",{\"1\":{\"43\":1}}],[\"算法等\",{\"1\":{\"46\":1}}],[\"算法效率低\",{\"1\":{\"45\":1}}],[\"rabin\",{\"1\":{\"46\":1}}],[\"regarded\",{\"1\":{\"26\":1}}],[\"若需要处理更大的数据\",{\"1\":{\"46\":1}}],[\"必然有一个值小于等于\",{\"1\":{\"46\":1}}],[\"必然有一个值小于等于n​\",{\"1\":{\"46\":1}}],[\"根据以上讨论的两点\",{\"1\":{\"46\":1}}],[\"根据乘法原理可得\",{\"1\":{\"40\":1}}],[\"都大于\",{\"1\":{\"46\":1}}],[\"都小于\",{\"1\":{\"46\":1}}],[\"b10​\",{\"1\":{\"57\":2}}],[\"b\",{\"1\":{\"46\":4}}],[\"be\",{\"1\":{\"26\":1}}],[\"首先我们要知道\",{\"1\":{\"46\":1}}],[\"呢\",{\"1\":{\"46\":1}}],[\"√n\",{\"1\":{\"46\":1}}],[\"开始逐个枚举\",{\"1\":{\"46\":1}}],[\"开始逐个枚举小于\",{\"1\":{\"45\":1}}],[\"​n\",{\"1\":{\"46\":1}}],[\"只保留整数部分\",{\"1\":{\"59\":1}}],[\"只不过它的枚举范围不再是\",{\"1\":{\"46\":1}}],[\"只可能是质数\",{\"1\":{\"39\":1}}],[\"找寻\",{\"1\":{\"46\":1}}],[\"找出我们想要的答案\",{\"1\":{\"39\":1}}],[\"o\",{\"1\":{\"45\":1,\"46\":1}}],[\"但时间复杂度为\",{\"1\":{\"45\":1}}],[\"但根据我们的步骤\",{\"1\":{\"39\":1}}],[\"思路简单\",{\"1\":{\"45\":1}}],[\"存储下\",{\"1\":{\"45\":1,\"46\":1}}],[\"用\",{\"1\":{\"45\":1,\"46\":1}}],[\"判断其中是否存在\",{\"1\":{\"45\":1,\"46\":1}}],[\"判定一个数是否是质数的方法很多\",{\"1\":{\"44\":1}}],[\"于是\",{\"1\":{\"45\":1}}],[\"枚举法的编码量小\",{\"1\":{\"45\":1}}],[\"枚举法\",{\"0\":{\"45\":1},\"1\":{\"44\":1}}],[\"以\",{\"1\":{\"59\":1}}],[\"以方便我们后续操作\",{\"1\":{\"58\":1}}],[\"以下将介绍两种较为简单的方法\",{\"1\":{\"44\":1}}],[\"以便\",{\"1\":{\"9\":1}}],[\"等等\",{\"1\":{\"43\":1}}],[\"本身\",{\"1\":{\"43\":1}}],[\"本页面就是一个示例\",{\"1\":{\"3\":1}}],[\"没有其他的因数\",{\"1\":{\"43\":1}}],[\"除法运算\",{\"1\":{\"58\":1}}],[\"除\",{\"1\":{\"53\":1,\"55\":1,\"59\":1}}],[\"除了\",{\"1\":{\"43\":1}}],[\"除尽质因子后的\",{\"1\":{\"39\":1}}],[\"又称素数\",{\"1\":{\"43\":1}}],[\"核心代码实现在题目中给出\",{\"0\":{\"42\":1}}],[\"进制数转十进制数\",{\"0\":{\"56\":1}}],[\"进制数\",{\"0\":{\"55\":1,\"57\":2},\"1\":{\"51\":1,\"55\":1,\"56\":1,\"57\":2}}],[\"进制是组成以\",{\"1\":{\"50\":1}}],[\"进制转换\",{\"0\":{\"50\":1,\"51\":1}}],[\"进一步得到\",{\"1\":{\"41\":1}}],[\"进行引用\",{\"1\":{\"28\":1}}],[\"均是等比数列\",{\"1\":{\"41\":1}}],[\"仔细观察不难发现\",{\"1\":{\"41\":1}}],[\"三\",{\"0\":{\"41\":1}}],[\"6\",{\"1\":{\"40\":1,\"46\":1,\"50\":1,\"59\":1,\"60\":1}}],[\"404\",{\"1\":{\"61\":1}}],[\"4÷10=0\",{\"1\":{\"59\":1}}],[\"43÷10=4\",{\"1\":{\"59\":1}}],[\"43\",{\"1\":{\"59\":1}}],[\"432÷10=43\",{\"1\":{\"59\":1}}],[\"432\",{\"1\":{\"59\":1}}],[\"4321÷10=432\",{\"1\":{\"59\":1}}],[\"4321\",{\"1\":{\"58\":1,\"59\":2}}],[\"4\",{\"1\":{\"40\":2,\"43\":1,\"46\":1,\"50\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":3,\"60\":1}}],[\"∏i=1k​\",{\"1\":{\"40\":1}}],[\"共\",{\"1\":{\"40\":3,\"50\":1}}],[\"可以分解质因数为\",{\"1\":{\"40\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"9\":1}}],[\"步有\",{\"1\":{\"40\":1}}],[\"种不同的方法\",{\"1\":{\"40\":4}}],[\"做第\",{\"1\":{\"40\":1}}],[\"做第二步有\",{\"1\":{\"40\":1}}],[\"做第一步有\",{\"1\":{\"40\":1}}],[\"做一件事\",{\"1\":{\"40\":1}}],[\"个位数字为\",{\"1\":{\"58\":1}}],[\"个基本数字组成\",{\"1\":{\"50\":1}}],[\"个\",{\"1\":{\"40\":3}}],[\"个步骤\",{\"1\":{\"40\":1}}],[\"个数定理是一个关于正整数的数学定理\",{\"1\":{\"40\":1}}],[\"完成它需要分成\",{\"1\":{\"40\":1}}],[\"乘法原理\",{\"1\":{\"40\":1}}],[\"至于原因\",{\"1\":{\"40\":1,\"41\":1}}],[\"⋯\",{\"1\":{\"40\":7,\"41\":2,\"50\":1}}],[\"那么完成这件事共有\",{\"1\":{\"40\":1}}],[\"那么\",{\"1\":{\"40\":1,\"41\":1,\"46\":1,\"58\":1}}],[\"那么它就是那个大于\",{\"1\":{\"39\":1}}],[\"那么它一定可以分解成多个质因子相乘的形式\",{\"1\":{\"39\":1}}],[\"具体地\",{\"1\":{\"40\":1,\"41\":1}}],[\"×\",{\"1\":{\"40\":1,\"41\":1}}],[\"得到千位上的数字\",{\"1\":{\"59\":1}}],[\"得到百位上的数字\",{\"1\":{\"59\":1}}],[\"得到十位上的数字\",{\"1\":{\"59\":1}}],[\"得到个位上的数字\",{\"1\":{\"59\":1}}],[\"得到一个新的十进制数\",{\"1\":{\"53\":1,\"55\":1}}],[\"得到\",{\"1\":{\"40\":1,\"41\":1}}],[\"然后\",{\"1\":{\"40\":1,\"41\":1}}],[\"然后继续找下一个因子\",{\"1\":{\"39\":1}}],[\"分解质因数\",{\"1\":{\"40\":1,\"41\":1}}],[\"分类为\",{\"1\":{\"27\":1}}],[\"举个例子\",{\"1\":{\"40\":1,\"41\":1,\"43\":1}}],[\"之后也就不会有因数了\",{\"1\":{\"46\":1}}],[\"之前都找不到\",{\"1\":{\"46\":1}}],[\"之间的所有数\",{\"1\":{\"46\":1}}],[\"之间的数\",{\"1\":{\"39\":1}}],[\"之积\",{\"1\":{\"40\":1}}],[\"因为\",{\"1\":{\"46\":1}}],[\"因为它能被\",{\"1\":{\"43\":1}}],[\"因为它只能被\",{\"1\":{\"43\":1}}],[\"因数都是成对存在的\",{\"1\":{\"46\":2}}],[\"因数分解法的时间复杂度相对较低\",{\"1\":{\"46\":1}}],[\"因数分解法的本质也是通过枚举\",{\"1\":{\"46\":1}}],[\"因数分解法\",{\"0\":{\"46\":1},\"1\":{\"44\":1}}],[\"因数\",{\"1\":{\"40\":1,\"41\":1}}],[\"因此质数的性质在很多数学理论中都有着重要的作用\",{\"1\":{\"43\":1}}],[\"因此可以借助于\",{\"1\":{\"12\":1}}],[\"因此\",{\"1\":{\"9\":1,\"40\":1,\"41\":2,\"45\":1,\"46\":1}}],[\"约数\",{\"1\":{\"40\":1,\"41\":1}}],[\"求\",{\"0\":{\"40\":1,\"41\":1}}],[\"二进制数转十进制数\",{\"0\":{\"54\":1}}],[\"二进制是组成以\",{\"1\":{\"50\":1}}],[\"二\",{\"0\":{\"40\":1,\"46\":1,\"60\":1}}],[\"54321\",{\"1\":{\"59\":1,\"60\":1}}],[\"5\",{\"1\":{\"39\":1,\"43\":1,\"45\":1,\"46\":1,\"50\":1,\"59\":2,\"60\":2}}],[\"返回的结果为\",{\"1\":{\"39\":3,\"40\":3,\"45\":5,\"46\":5}}],[\"返回顶部按钮\",{\"1\":{\"3\":1,\"6\":1}}],[\"7\",{\"1\":{\"39\":2,\"43\":1,\"45\":4,\"46\":4,\"50\":1}}],[\"work\",{\"1\":{\"39\":3,\"40\":3,\"45\":2,\"46\":2,\"53\":2,\"54\":2,\"55\":4,\"56\":2,\"57\":2,\"59\":2,\"60\":2}}],[\"will\",{\"1\":{\"26\":1}}],[\"运行举例说明\",{\"1\":{\"39\":1,\"40\":1,\"45\":2,\"46\":2,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"59\":1,\"60\":1}}],[\"就会被遗留下来\",{\"1\":{\"39\":1}}],[\"就可以表示为\",{\"1\":{\"38\":1}}],[\"该质因子不会被除尽\",{\"1\":{\"39\":1}}],[\"同理\",{\"1\":{\"39\":1,\"50\":1}}],[\"同时每个页面包含\",{\"1\":{\"6\":1}}],[\"则一定有个因数\",{\"1\":{\"46\":1}}],[\"则\",{\"1\":{\"45\":1,\"46\":2}}],[\"则该数不是质数\",{\"1\":{\"45\":1}}],[\"则它们相乘的结果为大于\",{\"1\":{\"39\":1}}],[\"则剩余的\",{\"1\":{\"39\":1}}],[\"原来的\",{\"1\":{\"39\":1}}],[\"说明\",{\"1\":{\"39\":1,\"45\":3,\"46\":3,\"57\":1}}],[\"且该质因子的指数最多为\",{\"1\":{\"39\":1}}],[\"且指数为\",{\"1\":{\"39\":1}}],[\"且按照质因子从小到大的顺序排列\",{\"1\":{\"38\":1}}],[\"大于\",{\"1\":{\"39\":1}}],[\"作判断\",{\"1\":{\"39\":1}}],[\"作者设置为\",{\"1\":{\"27\":1}}],[\"此外\",{\"1\":{\"39\":1}}],[\"此文字有脚注^first\",{\"1\":{\"20\":1}}],[\"所以它每一位的单个元素都是可以提取的\",{\"1\":{\"60\":1}}],[\"所以如果剩余的数大于\",{\"1\":{\"39\":1}}],[\"所以\",{\"1\":{\"39\":1}}],[\"小的数在此之前的循环过程中已经被除尽了\",{\"1\":{\"39\":1}}],[\"比如\",{\"1\":{\"46\":1}}],[\"比\",{\"1\":{\"39\":1}}],[\"要小\",{\"1\":{\"39\":1}}],[\"要么可以被唯一地分解成若干质因子的乘积的形式\",{\"1\":{\"38\":1}}],[\"假如\",{\"1\":{\"39\":1}}],[\"证明\",{\"1\":{\"39\":1}}],[\"能被\",{\"1\":{\"39\":1}}],[\"直到旧的十进制数为\",{\"1\":{\"53\":1,\"55\":1}}],[\"直到\",{\"1\":{\"39\":1}}],[\"不易出错\",{\"1\":{\"45\":1}}],[\"不是质数\",{\"1\":{\"45\":1,\"46\":1}}],[\"不是一个质数\",{\"1\":{\"43\":1,\"45\":1,\"46\":1}}],[\"不包含\",{\"1\":{\"45\":1,\"46\":1}}],[\"不可能是合数\",{\"1\":{\"39\":1}}],[\"不在包含该因子\",{\"1\":{\"39\":1}}],[\"不断除以该因子\",{\"1\":{\"39\":1}}],[\"不能有其他的分解方式\",{\"1\":{\"38\":1}}],[\"而是\",{\"1\":{\"46\":1}}],[\"而在质因数分解中\",{\"1\":{\"39\":1}}],[\"而不能有其他的分解方式\",{\"1\":{\"38\":1}}],[\"当我们找到\",{\"1\":{\"39\":2}}],[\"在计算机中\",{\"1\":{\"50\":1}}],[\"在生活中\",{\"1\":{\"50\":1}}],[\"在绝大多数情况下都能满足要求\",{\"1\":{\"46\":1}}],[\"在绝对多数情况下\",{\"1\":{\"45\":1}}],[\"在一对因数中\",{\"1\":{\"46\":1}}],[\"在\",{\"1\":{\"46\":1}}],[\"在判断\",{\"1\":{\"45\":1}}],[\"在日常生活中\",{\"1\":{\"43\":1}}],[\"在我们枚举\",{\"1\":{\"39\":1}}],[\"在枚举结束后\",{\"1\":{\"39\":1}}],[\"在质因数分解的过程中\",{\"1\":{\"39\":1}}],[\"在因数分解中\",{\"1\":{\"39\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"3\":1}}],[\"试除法\",{\"1\":{\"39\":1}}],[\"一个只大于等于\",{\"1\":{\"46\":1}}],[\"一个值大于等于n​\",{\"1\":{\"46\":1}}],[\"一个拥有\",{\"1\":{\"19\":1}}],[\"一定都是质数\",{\"1\":{\"39\":1}}],[\"一\",{\"0\":{\"39\":1,\"45\":1,\"59\":1}}],[\"下面以\",{\"1\":{\"39\":1}}],[\"下面我们来看看常见的三种应用\",{\"1\":{\"38\":1}}],[\"下一篇\",{\"1\":{\"3\":1}}],[\"如上所示\",{\"1\":{\"59\":1}}],[\"如何通过编码取得一个整数的每一位数字呢\",{\"1\":{\"58\":1}}],[\"如欧拉筛法\",{\"1\":{\"46\":1}}],[\"如果在\",{\"1\":{\"46\":1}}],[\"如果枚举完后都没有找到因数\",{\"1\":{\"45\":1}}],[\"如果找到一个\",{\"1\":{\"45\":1}}],[\"如果\",{\"1\":{\"40\":1,\"41\":1,\"46\":2}}],[\"如果我们要计算\",{\"1\":{\"40\":1,\"41\":1}}],[\"如果指数大于\",{\"1\":{\"39\":1}}],[\"如果不止包含一个\",{\"1\":{\"39\":1}}],[\"如果剩余的\",{\"1\":{\"39\":1}}],[\"如果你不了解它\",{\"1\":{\"11\":1}}],[\"如果你是一个新手\",{\"1\":{\"10\":1}}],[\"如\",{\"1\":{\"38\":1}}],[\"质数的判定\",{\"0\":{\"44\":1}}],[\"质数的定义可以被表述为\",{\"1\":{\"43\":1}}],[\"质数\",{\"0\":{\"43\":1},\"1\":{\"43\":1}}],[\"质数为\",{\"1\":{\"38\":1}}],[\"质因数分解是将一个正整数分解成若干个质因子的乘积\",{\"1\":{\"39\":1}}],[\"质因数分解\",{\"0\":{\"39\":1}}],[\"质因子\",{\"1\":{\"38\":2}}],[\"质因子是以指数形式出现\",{\"1\":{\"38\":1}}],[\"指数为\",{\"1\":{\"38\":1}}],[\"指南\",{\"2\":{\"7\":1}}],[\"36\",{\"1\":{\"40\":1}}],[\"30+31\",{\"1\":{\"41\":1}}],[\"30\",{\"1\":{\"39\":1}}],[\"3\",{\"1\":{\"38\":2,\"39\":2,\"40\":1,\"43\":1,\"46\":1,\"50\":1,\"58\":1,\"59\":3,\"60\":2}}],[\"它只能被\",{\"1\":{\"43\":1}}],[\"它只有\",{\"1\":{\"38\":1}}],[\"它只有一种质因数分解的方式\",{\"1\":{\"38\":1}}],[\"它的千位数字为\",{\"1\":{\"58\":1}}],[\"它的因数必然是小于等于它本身的\",{\"1\":{\"45\":1}}],[\"它的约数之和等于它分解质因数后每个质因子的所有次幂之和的乘积\",{\"1\":{\"41\":1}}],[\"它的约数个数等于它分解质因数后每个质因子的指数加\",{\"1\":{\"40\":1}}],[\"它的质因子有\",{\"1\":{\"38\":1}}],[\"它声称\",{\"1\":{\"40\":1,\"41\":1}}],[\"它和因数分解类似\",{\"1\":{\"39\":1}}],[\"它要么本身是个质数\",{\"1\":{\"38\":1}}],[\"例如整数\",{\"1\":{\"58\":1}}],[\"例如\",{\"1\":{\"38\":2,\"53\":1,\"54\":1}}],[\"即把一个数的每一位数字拆分出来\",{\"1\":{\"58\":1}}],[\"即二进制数\",{\"1\":{\"54\":1}}],[\"即十进制数\",{\"1\":{\"53\":1}}],[\"即从\",{\"1\":{\"46\":1}}],[\"即\",{\"1\":{\"38\":1,\"46\":1,\"55\":2}}],[\"not\",{\"1\":{\"61\":1}}],[\"n=a×b\",{\"1\":{\"46\":1}}],[\"n=p1a1​​×p2a2​​×⋯×pkak​​\",{\"1\":{\"40\":1,\"41\":1}}],[\"n=i=1∏k​piai​​=p1a1​​×p2a2​​×⋯×pkak​​\",{\"1\":{\"38\":1}}],[\"n也是原来的\",{\"1\":{\"39\":1}}],[\"n​\",{\"1\":{\"39\":3,\"46\":8}}],[\"n\",{\"1\":{\"38\":2,\"39\":12,\"40\":7,\"41\":3,\"45\":9,\"46\":9}}],[\"唯一分解定理的应用非常广泛\",{\"1\":{\"38\":1}}],[\"唯一分解定理\",{\"0\":{\"37\":1,\"38\":1},\"1\":{\"39\":1}}],[\"详情\",{\"0\":{\"36\":1,\"49\":1}}],[\"详情容器\",{\"1\":{\"15\":1}}],[\"功能\",{\"1\":{\"35\":1,\"48\":1}}],[\"基础数学2\",{\"0\":{\"34\":1}}],[\"基础数学1\",{\"0\":{\"33\":1,\"47\":1}}],[\"简介\",{\"0\":{\"32\":1},\"1\":{\"38\":1,\"40\":1,\"41\":1,\"43\":1,\"50\":1,\"58\":1}}],[\"+p2a2​\",{\"1\":{\"41\":2}}],[\"+\",{\"1\":{\"29\":1,\"39\":1,\"58\":1}}],[\"这是因为\",{\"1\":{\"46\":1}}],[\"这是项目主页的案例\",{\"1\":{\"0\":1}}],[\"这多个质因子同时也是\",{\"1\":{\"39\":1}}],[\"这一种质因数分解的方式\",{\"1\":{\"38\":1}}],[\"这意味着你可以在\",{\"1\":{\"29\":1}}],[\"每个\",{\"1\":{\"29\":1}}],[\"图片引入\",{\"1\":{\"28\":1}}],[\"图片增强\",{\"0\":{\"23\":1}}],[\"日\",{\"1\":{\"27\":1}}],[\"月\",{\"1\":{\"27\":1}}],[\"年\",{\"1\":{\"27\":1}}],[\"写作日期为\",{\"1\":{\"27\":1}}],[\"prime\",{\"1\":{\"45\":3,\"46\":3}}],[\"pk1​\",{\"1\":{\"40\":1}}],[\"pk0​+pk1​+⋯+pkak​​\",{\"1\":{\"41\":2}}],[\"pk0​\",{\"1\":{\"40\":1}}],[\"pkak​​\",{\"1\":{\"40\":2}}],[\"pk​\",{\"1\":{\"38\":1}}],[\"p21​\",{\"1\":{\"40\":1}}],[\"p20​+p21​+\",{\"1\":{\"41\":2}}],[\"p20​\",{\"1\":{\"40\":1}}],[\"p2a2​​\",{\"1\":{\"40\":2}}],[\"p2​\",{\"1\":{\"38\":1}}],[\"p11​\",{\"1\":{\"40\":1}}],[\"p10​+p11​+⋯+p1a1​​\",{\"1\":{\"41\":2}}],[\"p10​\",{\"1\":{\"40\":1}}],[\"p1a1​​\",{\"1\":{\"40\":2}}],[\"p1a1​​×p2a2​​×⋯×pkak​​\",{\"1\":{\"40\":1}}],[\"p1​=2\",{\"1\":{\"38\":1}}],[\"p1​\",{\"1\":{\"38\":1}}],[\"public\",{\"1\":{\"28\":1}}],[\"page\",{\"1\":{\"26\":1}}],[\"plugin\",{\"1\":{\"14\":1}}],[\"found\",{\"1\":{\"61\":1}}],[\"foo\",{\"1\":{\"35\":1,\"48\":1}}],[\"false\",{\"1\":{\"45\":1,\"46\":1}}],[\"first\",{\"1\":{\"26\":1}}],[\"frontmatter\",{\"1\":{\"3\":1,\"6\":1,\"11\":3,\"26\":1,\"27\":1}}],[\"front\",{\"1\":{\"0\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"25\":1}}],[\"组件\",{\"0\":{\"24\":1,\"29\":1},\"1\":{\"29\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"23\":1}}],[\"24\",{\"1\":{\"55\":1,\"57\":3}}],[\"2​=1×20+0×21+1×22+1×23=\",{\"1\":{\"54\":1}}],[\"2​\",{\"1\":{\"51\":1,\"53\":1,\"54\":1}}],[\"210​=5\",{\"1\":{\"46\":1}}],[\"2132\",{\"1\":{\"38\":2}}],[\"28\",{\"1\":{\"41\":1}}],[\"20\",{\"1\":{\"55\":2,\"56\":1,\"57\":1}}],[\"20+21+22\",{\"1\":{\"41\":1}}],[\"2020\",{\"1\":{\"27\":1}}],[\"2+1\",{\"1\":{\"40\":1}}],[\"2∼n​\",{\"1\":{\"39\":1}}],[\"2\",{\"1\":{\"22\":1,\"38\":4,\"39\":4,\"43\":3,\"45\":2,\"46\":6,\"50\":2,\"53\":2,\"54\":1,\"55\":2,\"56\":2,\"57\":1,\"58\":1,\"59\":3,\"60\":2}}],[\"计划\",{\"1\":{\"22\":2}}],[\"x​\",{\"1\":{\"51\":1,\"54\":1,\"56\":1}}],[\"x−1\",{\"1\":{\"50\":1}}],[\"x\",{\"1\":{\"22\":1,\"50\":3,\"51\":1,\"55\":3,\"56\":5,\"57\":5}}],[\"任务列表\",{\"0\":{\"22\":1}}],[\"标签为\",{\"1\":{\"27\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"26\":1}}],[\"标题和页面信息\",{\"1\":{\"6\":1}}],[\"标记\",{\"0\":{\"21\":1}}],[\"脚注\",{\"0\":{\"20\":1}}],[\"单词\",{\"1\":{\"19\":1}}],[\"的对应次幂\",{\"1\":{\"54\":1}}],[\"的因子有\",{\"1\":{\"45\":1,\"46\":1}}],[\"的因数的话\",{\"1\":{\"46\":1}}],[\"的因数\",{\"1\":{\"45\":3,\"46\":3}}],[\"的所有数\",{\"1\":{\"45\":1}}],[\"的所有约数的和\",{\"0\":{\"41\":1}}],[\"的质因数分解式为\",{\"1\":{\"40\":1,\"41\":1}}],[\"的质因子了\",{\"1\":{\"39\":1}}],[\"的质因子\",{\"1\":{\"39\":1}}],[\"的质因子且比\",{\"1\":{\"39\":1}}],[\"的约数之和就为\",{\"1\":{\"41\":1}}],[\"的约数之和为\",{\"1\":{\"41\":1}}],[\"的约数之和\",{\"1\":{\"41\":1}}],[\"的约数有\",{\"1\":{\"40\":3}}],[\"的约数个数就为\",{\"1\":{\"40\":1}}],[\"的约数个数为\",{\"1\":{\"40\":2}}],[\"的约数个数\",{\"1\":{\"40\":1}}],[\"的约数的个数\",{\"0\":{\"40\":1}}],[\"的过程中\",{\"1\":{\"39\":1}}],[\"的一个质因子\",{\"1\":{\"39\":1}}],[\"的一个因子后\",{\"1\":{\"39\":2}}],[\"的个数为\",{\"1\":{\"38\":2}}],[\"的整数\",{\"1\":{\"38\":1}}],[\"的\",{\"1\":{\"19\":1,\"26\":1,\"27\":1}}],[\"is\",{\"1\":{\"45\":3,\"46\":3}}],[\"i=1∏k​pi​−1piai​+1​−1​=p1​−1p1a1​+1​−1​×p2​−1p2a2​+1​−1​×⋯×pk​−1pkak​+1​−1​\",{\"1\":{\"41\":1}}],[\"i=1∏k​\",{\"1\":{\"40\":1}}],[\"i\",{\"1\":{\"29\":1,\"39\":5}}],[\"int\",{\"1\":{\"56\":2,\"57\":2}}],[\"in\",{\"1\":{\"26\":1}}],[\"id\",{\"1\":{\"19\":1}}],[\"it\",{\"1\":{\"12\":2}}],[\"我们就可以依次得到一个整数的个位\",{\"1\":{\"59\":1}}],[\"我们常说的整数均是十进制数\",{\"1\":{\"50\":1}}],[\"我们常见的质数有\",{\"1\":{\"43\":1}}],[\"我们也可以在判断\",{\"1\":{\"46\":1}}],[\"我们设它的一对因数为\",{\"1\":{\"46\":1}}],[\"我们不会使用该方法来判断一个数是否为质数\",{\"1\":{\"45\":1}}],[\"我们知道\",{\"1\":{\"45\":1}}],[\"我们同样可以用乘法原理证明\",{\"1\":{\"41\":1}}],[\"我们将它的约数相加并相乘\",{\"1\":{\"41\":1}}],[\"我们将它的指数加\",{\"1\":{\"40\":1}}],[\"我们可以使用语言自带的整数转字符串函数\",{\"1\":{\"60\":1}}],[\"我们可以使用更高效的算法\",{\"1\":{\"46\":1}}],[\"我们可以用\",{\"1\":{\"51\":3}}],[\"我们可以用数学公式将定理表示出来\",{\"1\":{\"38\":1}}],[\"我们可以从\",{\"1\":{\"45\":1}}],[\"我们可以套用等比数列求和公式\",{\"1\":{\"41\":1}}],[\"我们可以简单地用乘法原理来解释\",{\"1\":{\"40\":1}}],[\"我们可以将\",{\"1\":{\"40\":1,\"41\":1}}],[\"我们还需要对剩余的\",{\"1\":{\"39\":1}}],[\"我们需要令\",{\"1\":{\"39\":1}}],[\"我们只是简单的将其存储\",{\"1\":{\"39\":1}}],[\"我们支持\",{\"1\":{\"35\":1,\"48\":1}}],[\"我在右对齐\",{\"1\":{\"18\":1}}],[\"我是居中的\",{\"1\":{\"18\":1}}],[\"自定义对齐\",{\"0\":{\"18\":1}}],[\"自定义标题\",{\"1\":{\"15\":5}}],[\"hope\",{\"1\":{\"27\":1}}],[\"home\",{\"1\":{\"0\":1}}],[\"h1\",{\"1\":{\"26\":2}}],[\"h2o\",{\"1\":{\"17\":1}}],[\"上下角标\",{\"0\":{\"17\":1}}],[\"上一篇\",{\"1\":{\"3\":1}}],[\"查看详情\",{\"1\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"危险容器\",{\"1\":{\"15\":1}}],[\"警告容器\",{\"1\":{\"15\":1}}],[\"14\",{\"1\":{\"57\":1}}],[\"16​=\",{\"1\":{\"57\":1}}],[\"16\",{\"1\":{\"57\":1}}],[\"16÷2=3\",{\"1\":{\"53\":1}}],[\"15\",{\"1\":{\"54\":1}}],[\"1×20=10×21=01×22=41×23=8\",{\"1\":{\"54\":1}}],[\"13÷2=6\",{\"1\":{\"53\":1}}],[\"13\",{\"1\":{\"43\":1,\"45\":2,\"46\":2,\"51\":2,\"53\":3,\"54\":6,\"55\":2,\"56\":1}}],[\"1111011\",{\"1\":{\"53\":1}}],[\"11÷2=0\",{\"1\":{\"53\":1}}],[\"1101\",{\"1\":{\"51\":2,\"53\":3,\"54\":3,\"55\":1}}],[\"11\",{\"1\":{\"43\":1}}],[\"10=4\",{\"1\":{\"59\":1}}],[\"10=3\",{\"1\":{\"59\":1}}],[\"10=2\",{\"1\":{\"59\":1}}],[\"10=1\",{\"1\":{\"59\":1}}],[\"10​=\",{\"1\":{\"57\":1}}],[\"10​=3×100+1×101=\",{\"1\":{\"54\":1}}],[\"10​\",{\"1\":{\"51\":1,\"53\":1,\"54\":3}}],[\"10\",{\"1\":{\"40\":1,\"45\":5,\"46\":3,\"50\":1,\"59\":2}}],[\"1+1\",{\"1\":{\"40\":1}}],[\"123\",{\"1\":{\"53\":1}}],[\"12=2231\",{\"1\":{\"40\":1,\"41\":1}}],[\"12\",{\"1\":{\"39\":2,\"40\":4,\"41\":3,\"46\":3}}],[\"18=223118=2133⋯\",{\"1\":{\"38\":1}}],[\"18\",{\"1\":{\"38\":2}}],[\"19th\",{\"1\":{\"17\":1}}],[\"1\",{\"1\":{\"15\":1,\"22\":1,\"27\":2,\"29\":2,\"38\":3,\"39\":10,\"40\":2,\"43\":3,\"45\":1,\"46\":1,\"50\":3,\"53\":2,\"54\":7,\"55\":1,\"56\":3,\"57\":4,\"58\":1,\"59\":3,\"60\":2}}],[\"=7×4=28\",{\"1\":{\"41\":1}}],[\"=6\",{\"1\":{\"40\":1}}],[\"=\",{\"1\":{\"15\":1,\"40\":2,\"54\":3,\"56\":4,\"57\":6}}],[\"ax​\",{\"1\":{\"57\":1}}],[\"abcde\",{\"1\":{\"51\":2,\"54\":1,\"56\":1}}],[\"a×b>n​×n​=n\",{\"1\":{\"46\":1}}],[\"a×b<n​×n​=n\",{\"1\":{\"46\":1}}],[\"ai​+1\",{\"1\":{\"40\":2}}],[\"ak​+1\",{\"1\":{\"40\":3}}],[\"ak​\",{\"1\":{\"38\":1}}],[\"a2​+1\",{\"1\":{\"40\":3}}],[\"a2​=2\",{\"1\":{\"38\":1}}],[\"a2​\",{\"1\":{\"38\":1}}],[\"a1​+1\",{\"1\":{\"40\":3}}],[\"a1​=1p2​=3\",{\"1\":{\"38\":1}}],[\"a1​\",{\"1\":{\"38\":1}}],[\"as\",{\"1\":{\"26\":1}}],[\"attrs\",{\"0\":{\"19\":1}}],[\"a\",{\"1\":{\"15\":1,\"46\":4,\"56\":2,\"57\":2}}],[\"const\",{\"1\":{\"15\":1}}],[\"与二进制转十进制方法几乎完全相同\",{\"1\":{\"56\":1}}],[\"与十进制转二进制的方法几乎完全相同\",{\"1\":{\"55\":1}}],[\"与十进制数类似\",{\"1\":{\"50\":1}}],[\"与\",{\"1\":{\"15\":1}}],[\"代码块\",{\"0\":{\"16\":1}}],[\"代码\",{\"1\":{\"15\":1}}],[\"包含\",{\"1\":{\"15\":1}}],[\"信息容器\",{\"1\":{\"15\":1}}],[\"vector<int>a\",{\"1\":{\"56\":2,\"57\":2}}],[\"vector<int>b\",{\"1\":{\"54\":2}}],[\"vector\",{\"1\":{\"45\":1,\"46\":1}}],[\"vue\",{\"1\":{\"29\":2}}],[\"vuepress\",{\"0\":{\"13\":1},\"1\":{\"9\":2,\"11\":2,\"12\":1,\"13\":2,\"14\":1,\"28\":1}}],[\"variable\",{\"1\":{\"15\":1}}],[\"安全的在\",{\"1\":{\"15\":1}}],[\"提示\",{\"1\":{\"54\":1}}],[\"提示容器\",{\"0\":{\"15\":1},\"1\":{\"15\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"14\":1}}],[\"miller\",{\"1\":{\"46\":1}}],[\"mn​\",{\"1\":{\"40\":1}}],[\"m2​\",{\"1\":{\"40\":1}}],[\"m1​×m2​×⋯×mn​\",{\"1\":{\"40\":1}}],[\"m1​\",{\"1\":{\"40\":1}}],[\"ms\",{\"1\":{\"27\":1}}],[\"more\",{\"1\":{\"25\":1}}],[\"md\",{\"1\":{\"14\":1}}],[\"markdown\",{\"0\":{\"9\":1,\"10\":1,\"11\":1,\"12\":1},\"1\":{\"9\":2,\"10\":3,\"11\":1,\"12\":3,\"13\":2,\"14\":1,\"15\":1,\"26\":3,\"27\":1,\"28\":2,\"29\":2}}],[\"matter\",{\"1\":{\"0\":1}}],[\"请使用绝对链接\",{\"1\":{\"28\":1}}],[\"请阅读\",{\"1\":{\"13\":1}}],[\"请先阅读\",{\"1\":{\"10\":1}}],[\"关于这些扩展\",{\"1\":{\"13\":1}}],[\"语法\",{\"1\":{\"14\":1,\"29\":1}}],[\"语法进行了扩展\",{\"1\":{\"13\":1}}],[\"语法扩展\",{\"1\":{\"12\":1}}],[\"对此\",{\"1\":{\"60\":1}}],[\"对应的十进制数\",{\"1\":{\"54\":1}}],[\"对应的十进制数为\",{\"1\":{\"54\":1}}],[\"对应的二进制数为\",{\"1\":{\"53\":1}}],[\"对于每个质因子\",{\"1\":{\"40\":1,\"41\":1}}],[\"对于任意正整数\",{\"1\":{\"40\":1,\"41\":1}}],[\"对于一个\",{\"1\":{\"51\":1,\"56\":1}}],[\"对于一个二进制数\",{\"1\":{\"51\":1}}],[\"对于一个十进制数\",{\"1\":{\"51\":1}}],[\"对于一个合数\",{\"1\":{\"46\":1}}],[\"对于一个正整数\",{\"1\":{\"45\":1}}],[\"对于一个整数\",{\"1\":{\"38\":1}}],[\"对于一个大于\",{\"1\":{\"38\":1}}],[\"对于\",{\"1\":{\"28\":1}}],[\"对\",{\"1\":{\"13\":1}}],[\"为例\",{\"1\":{\"59\":1}}],[\"为例进行因数分解和质因数分解的演示\",{\"1\":{\"39\":1}}],[\"为止\",{\"1\":{\"53\":1,\"55\":1}}],[\"为基础的数字系统\",{\"1\":{\"50\":3}}],[\"为\",{\"1\":{\"46\":1}}],[\"为什么枚举范围能够缩小至\",{\"1\":{\"46\":1}}],[\"为正整数\",{\"1\":{\"38\":1}}],[\"为互不相同的质数\",{\"1\":{\"38\":1}}],[\"为了丰富文档写作\",{\"1\":{\"13\":1}}],[\"为每个\",{\"1\":{\"11\":1}}],[\"插件来实现\",{\"1\":{\"12\":1}}],[\"内容\",{\"1\":{\"12\":1}}],[\"来解析\",{\"1\":{\"12\":1}}],[\"会使用\",{\"1\":{\"12\":1}}],[\"扩展\",{\"0\":{\"12\":1,\"13\":1},\"1\":{\"13\":1}}],[\"是否是质数的同时\",{\"1\":{\"45\":1,\"46\":1}}],[\"是质数\",{\"1\":{\"45\":2,\"46\":1}}],[\"是一个质数\",{\"1\":{\"43\":1,\"45\":2,\"46\":3}}],[\"是一个合数\",{\"1\":{\"39\":1}}],[\"是一种特殊的自然数\",{\"1\":{\"43\":1}}],[\"是\",{\"1\":{\"11\":1}}],[\"相关信息\",{\"1\":{\"11\":1}}],[\"通过不断的模\",{\"1\":{\"59\":1}}],[\"通过枚举\",{\"1\":{\"39\":1}}],[\"通过\",{\"1\":{\"11\":1,\"14\":1}}],[\"配置\",{\"0\":{\"11\":1}}],[\"配置项的相关说明详见\",{\"1\":{\"0\":1}}],[\"演示\",{\"1\":{\"10\":1}}],[\"和本身以外\",{\"1\":{\"43\":1}}],[\"和本身整除\",{\"1\":{\"43\":1}}],[\"和定理是一个关于正整数的数学定理\",{\"1\":{\"41\":1}}],[\"和\",{\"1\":{\"10\":1,\"27\":1,\"43\":1,\"45\":1,\"46\":1}}],[\"还不会编写\",{\"1\":{\"10\":1}}],[\"介绍\",{\"0\":{\"10\":1,\"35\":1,\"48\":1},\"1\":{\"10\":1,\"11\":1}}],[\"文件夹的图片\",{\"1\":{\"28\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"28\":1}}],[\"文件\",{\"1\":{\"9\":1}}],[\"文件生成页面\",{\"1\":{\"9\":1}}],[\"文章标题列表\",{\"1\":{\"6\":1}}],[\"主题扩展了更多\",{\"1\":{\"14\":1}}],[\"主题扩展\",{\"0\":{\"14\":1}}],[\"主题也带有以下元素\",{\"1\":{\"6\":1}}],[\"主要从\",{\"1\":{\"9\":1}}],[\"展示\",{\"0\":{\"9\":1}}],[\"中\",{\"1\":{\"46\":1}}],[\"中最多可能包含一个大于\",{\"1\":{\"39\":1}}],[\"中使用\",{\"1\":{\"15\":1,\"29\":1}}],[\"中的第一个\",{\"1\":{\"26\":1}}],[\"中的\",{\"1\":{\"13\":1}}],[\"中很重要的一个概念\",{\"1\":{\"11\":1}}],[\"中自定义它们\",{\"1\":{\"6\":1}}],[\"中设置页面信息\",{\"1\":{\"27\":1}}],[\"中设置页面标题\",{\"1\":{\"26\":1}}],[\"中设置\",{\"1\":{\"0\":1}}],[\"打印按钮\",{\"1\":{\"6\":1}}],[\"夜间模式按钮\",{\"1\":{\"6\":1}}],[\"title\",{\"1\":{\"26\":3}}],[\"the\",{\"1\":{\"26\":1}}],[\"toc\",{\"1\":{\"6\":1}}],[\"true\",{\"1\":{\"0\":1,\"45\":2,\"46\":2}}],[\"布局包括\",{\"1\":{\"6\":1}}],[\"布局\",{\"0\":{\"6\":1},\"2\":{\"8\":1}}],[\"布局与功能禁用\",{\"0\":{\"3\":1}}],[\"禁用\",{\"2\":{\"5\":1}}],[\"禁用了如下功能\",{\"1\":{\"3\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"29\":1}}],[\"页面内容\",{\"0\":{\"28\":1}}],[\"页面标题\",{\"0\":{\"26\":1},\"1\":{\"26\":1}}],[\"页面配置\",{\"0\":{\"25\":1},\"1\":{\"27\":1},\"2\":{\"31\":1}}],[\"页面引入配置\",{\"1\":{\"11\":1}}],[\"页面信息\",{\"0\":{\"27\":1},\"1\":{\"3\":1}}],[\"页脚\",{\"1\":{\"3\":1,\"6\":1}}],[\"评论\",{\"1\":{\"3\":1,\"6\":1}}],[\"链接\",{\"1\":{\"3\":1,\"15\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"6\":1}}],[\"更新时间\",{\"1\":{\"3\":1}}],[\"编辑此页链接\",{\"1\":{\"3\":1}}],[\"贡献者\",{\"1\":{\"3\":1,\"6\":1}}],[\"路径导航\",{\"1\":{\"3\":1,\"6\":1}}],[\"侧边栏\",{\"1\":{\"3\":1,\"6\":1}}],[\"导航栏\",{\"1\":{\"3\":1,\"6\":1}}],[\"使用指南\",{\"1\":{\"27\":2},\"2\":{\"2\":1,\"4\":1,\"30\":1,\"31\":1}}],[\"动态规划\",{\"0\":{\"1\":1}}],[\"项目主页配置\",{\"1\":{\"0\":1}}],[\"你找到了一个因数\",{\"1\":{\"46\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"29\":1}}],[\"你需要阅读\",{\"1\":{\"11\":1}}],[\"你需要在页面\",{\"1\":{\"0\":1}}],[\"你应该创建和编写\",{\"1\":{\"9\":1}}],[\"你可以将图片和\",{\"1\":{\"28\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"28\":1}}],[\"你可以标记\",{\"1\":{\"21\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"9\":1}}],[\"你可以在\",{\"1\":{\"26\":1,\"27\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"6\":1}}],[\"你可以在这里放置你的主体内容\",{\"1\":{\"0\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"3\":1}}],[\"想要使用此布局\",{\"1\":{\"0\":1}}],[\"蓝桥wiki\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
